{{$out:=.}}

CREATE TABLE {{.SchemaName}}{{.EventTable}} (
    id BIGSERIAL NOT NULL,
    event_id TEXT NOT NULL,
    aggregate_id TEXT NOT NULL,
    aggregate_type TEXT NOT NULL,
    revision integer NOT NULL,
    timestamp bigint NOT NULL,
    event_type TEXT NOT NULL,
    event_data bytea,
    CONSTRAINT aggregate_revision UNIQUE (aggregate_id, aggregate_type, revision)
) PARTITION BY LIST(aggregate_type);

CREATE INDEX {{.EventTable}}_event_type_idx ON {{.SchemaName}}{{.EventTable}} (event_type);
CREATE INDEX {{.EventTable}}_event_id_idx ON {{.SchemaName}}{{.EventTable}} (event_id);


CREATE TABLE {{.SchemaName}}{{.SnapshotTable}} (
    id BIGSERIAL NOT NULL PRIMARY KEY,
    aggregate_id TEXT NOT NULL,
    aggregate_type TEXT NOT NULL,
    aggregate_version integer NOT NULL,
    revision integer NOT NULL,
    timestamp bigint NOT NULL,
    snapshot_data bytea,
    CONSTRAINT {{.SnapshotTable}}_aggregate_revision_uidx
        unique(aggregate_id, aggregate_type, revision)
);


CREATE TABLE {{.SchemaName}}{{.AggregateTable}} (
    id BIGSERIAL NOT NULL PRIMARY KEY,
    aggregate_id VARCHAR(255) NOT NULL,
    aggregate_type VARCHAR(255) NOT NULL,
    inserted_at bigint NOT NULL,
    constraint aggregate_aggregate_id_aggregate_type_uidx
        unique(aggregate_id, aggregate_type)
);

{{range $agg := .Aggregates}}
CREATE TABLE {{$out.SchemaName}}{{$out.EventTable}}_{{$agg.Type}} PARTITION OF {{$out.SchemaName}}{{$out.EventTable}} FOR VALUES IN('{{$agg.Value}}');
CREATE UNIQUE INDEX {{$out.EventTable}}_{{$agg.Type}}_event_id_uidx ON {{$out.SchemaName}}{{$out.EventTable}}_{{$agg.Type}} (event_id);
{{end}}

CREATE TABLE {{.SchemaName}}{{.HandlerRegistryTable}} (
    id SERIAL NOT NULL PRIMARY KEY,
    handler_name TEXT NOT NULL,
    event_type TEXT NOT NULL,
    CONSTRAINT {{.HandlerRegistryTable}}_handler_name_idx
        UNIQUE(handler_name, event_type)
);

CREATE INDEX {{.HandlerRegistryTable}}_event_type_idx ON {{.SchemaName}}{{.HandlerRegistryTable}} (event_type);

CREATE TABLE {{.SchemaName}}{{.EventStateTable}} (
    id BIGSERIAL NOT NULL,
    event_id TEXT NOT NULL,
    handler_name TEXT NOT NULL,
    state smallint NOT NULL,
    timestamp bigint NOT NULL,
    CONSTRAINT {{.EventStateTable}}_event_id_handler_name_uidx UNIQUE(event_id, handler_name)
) PARTITION BY LIST(handler_name);

CREATE TABLE {{.SchemaName}}{{.EventHandleFailureTable}} (
    id BIGSERIAL NOT NULL PRIMARY KEY,
    event_id TEXT NOT NULL,
    handler_name TEXT NOT NULL,
    timestamp BIGINT NOT NULL,
    error_message TEXT NOT NULL,
    error_code smallint NOT NULL,
    retry_no smallint NOT NULL
);

CREATE INDEX {{.EventHandleFailureTable}}_event_id_idx ON {{.SchemaName}}{{.EventHandleFailureTable}} (event_id);